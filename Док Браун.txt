import os
import random
import json
import logging
import telebot
import gspread
import datetime
import yadisk
import time

from telebot import types

googlesheet_id = '1T4BpctXyc_1dNJZ-zZttGrKqpaWBYMQ9IuGGA89nDYg'
googlesheet_id2 = '1xOBzeJY-iDi4wMtHeP5YccJVopm7boY7dsNYyxIvtGw'
gc = gspread.service_account("./service_account.json")
shUser = gc.open_by_key(googlesheet_id).sheet1
shID = gc.open_by_key(googlesheet_id2).sheet1

bot = telebot.TeleBot(os.environ.get('BOT_TOKEN'))
#y = yadisk.YaDisk(token='YADISK_TOKEN')

user_game = {}


# --------------------- bot ---------------------

# --------------- start/help --------------------
@bot.message_handler(commands=['start'])
def start(message):
    m = 'CAACAgIAAxkBAAEFLDFiv24mBpgw3Arrp_rutI2qcMjyJgACYAIAArrAlQWRGahphbj0xSkE'
    mess = f'–ù–∞–∫–æ–Ω–µ—Ü-—Ç–æ!!! –¢—ã —á–µ–≥–æ —Ç–∞–∫ –¥–æ–ª–≥–æ?üòë –ú–Ω–µ —É–∂–µ –Ω–∞–¥–æ–µ–ª–æ —Ç—É—Ç —Å–∏–¥–µ—Ç—å! –î–∞–≤–∞–π –±—É–¥–µ–º –º–µ–Ω—è —Å–ø–∞—Å–∞—Ç—å‚Ä¶'
    bot.send_sticker(message.chat.id, m)
    bot.send_message(message.chat.id, mess) 
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    s = types.KeyboardButton('/—Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è')
    markup.add(s)
    bot.send_message(message.chat.id, '‚Åâ –¢–∞–∫ —Å—Ç–æ–ø! –ê —Ç—ã –≤–æ–æ–±—â–µ –∫—Ç–æ? \n–ó–∞–π–¥–∏ –≤ /—Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è', reply_markup=markup)
    idi = message.from_user.id
    shID.append_row([idi])
    


@bot.message_handler(commands=['–ø–æ–º–æ—â—å'])
def help_gamer(message):
    global user_game
    mess = 'üßê –ß—Ç–æ —è –º–æ–≥—É: üîé'
    m1 = f'/—Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è - –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –Ω–æ–≤–æ–≥–æ –ø–µ—Ä—Å–æ–Ω–∞–∂–∞'
    m2 = f'/—Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ - –ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –ø–æ —Å–≤–æ–µ–º—É –ø–µ—Ä—Å–æ–Ω–∞–∂—É'
    m3 = f'/–∑–∞–≥–∞–¥–∫–∞ - –ï–∂–µ–¥–Ω–µ–≤–Ω—ã–µ –∏–Ω–¥–∏–≤–∏–¥—É–∞–ª—å–Ω—ã–µ –∑–∞–≥–∞–¥–∫–∏'
    m4 = f'/–≤—ã—Ö–æ–¥ - –í—ã—Ö–æ–¥ –≤ –º–µ–Ω—é –∏–≥—Ä–æ–∫–∞'
    bot.send_message(message.chat.id, mess+'\n'+m1+'\n'+m2+'\n'+m3+'\n'+m4)
    bot.send_message(message.chat.id, user_game)



# ---------------- signup ----------------------

@bot.message_handler(commands=['—Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è'])

#          ------ name -------
def ButSignUp(message):
    bot.send_message(message.chat.id, 'üëæ –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ —Ä–∞–∑–¥–µ–ª —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏!')
    bot.send_message(message.chat.id, '–°–æ–∑–¥–∞–π —Å–≤–æ–µ–≥–æ –ø–µ—Ä—Å–æ–Ω–∞–∂–∞ üßç–∏ –æ—Ç–ø—Ä–∞–≤–ª—è–π—Å—è –Ω–∞ –º–æ–∏ –ø–æ–∏—Å–∫–∏')
    bot.send_message(message.chat.id, '–¢–∞–∫ –∂–µ —Ç—ã –º–æ–∂–µ—à—å –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞—Ç—å –¥—Ä—É–≥–∞ üë´, –µ—Å–ª–∏ —É –Ω–µ–≥–æ –ø—Ä–æ–±–ª–µ–º—ã —Å –∏–Ω—Ç–µ—Ä–Ω–µ—Ç–æ–º üìµ')
    bot.send_message(message.chat.id, '–í–≤–µ–¥–∏ –§–∞–º–∏–ª–∏—é –∏ –ò–º—è')
    msg = bot.send_message(message.chat.id, '–í–≤–æ–¥–∏ –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ, –∏–Ω–∞—á–µ —è –Ω–µ —Å–º–æ–≥—É —Å —Ç–æ–±–æ–π –æ–±—â–∞—Ç—å—Å—è', reply_markup=types.ReplyKeyboardRemove())
    bot.register_next_step_handler(msg, get_password)

#          ------ password -------
def get_password(message):
    global user_game
    name = message.text
    if name != '/–≤—ã—Ö–æ–¥':
        if shUser.find(name):
            bot.send_message(message.chat.id, '–¢–∞–∫–æ–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —É–∂–µ —Å–æ–∑–¥–∞–Ω ü§∑. –ù–∞—á–Ω–∏ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—é –∑–∞–Ω–æ–≤–æ.')
        else:
            user_game[name] = {}
            msg = bot.send_message(message.chat.id, '–ü—Ä–∏–¥—É–º–∞–π –ø–∞—Ä–æ–ª—å üîí\n–ó–∞–ø–æ–º–Ω–∏ –µ–≥–æ, –ø–æ—Å–ª–µ –≤–≤–æ–¥–∞ –æ–Ω –∏—Å—á–µ–∑–Ω–µ—Ç. –£–∑–Ω–∞—Ç—å –µ–≥–æ —Ç—ã —Å–º–æ–∂–µ—à—å —Ç–æ–ª—å–∫–æ —É –º–æ–µ–≥–æ –ø–æ–º–æ—â–Ω–∏–∫–∞ –≥–µ–π–º–∏—Ñ–∏–∫–∞—Ç–æ—Ä–∞.')
            bot.register_next_step_handler(msg, get_area, name)
    else:
        bot.send_message(message.chat.id, '‚ö† ‚ö† ‚ö†')
        bot.send_message(message.chat.id, '–ü—Ä–æ–∏–∑–æ—à–ª–∞ –ø–µ—Ä–µ–≥—Ä—É–∑–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞... –ú–∞—à–∏–Ω–∞ –≤—Ä–µ–º–µ–Ω–∏ –∑–∞–ø—É—â–µ–Ω–∞...', reply_markup=types.ReplyKeyboardRemove())
        m = 'CAACAgIAAxkBAAEFLEdiv3QmtnJb7Gozpz1t8k9nPGj-gwACWwIAArrAlQVHEDI9MpTlvSkE'
        bot.send_sticker(message.chat.id, m)
        time.sleep(1)
        bot.send_message(message.chat.id, '–û—Ç–ø—Ä–∞–≤–∫–∞ –≤ 11.07.1985 —á–µ—Ä–µ–∑')
        bot.send_message(message.chat.id, '3')
        time.sleep(1)
        bot.send_message(message.chat.id, '2')
        time.sleep(1)
        bot.send_message(message.chat.id, '1')
        time.sleep(1)
        bot.send_message(message.chat.id, '0')
        bot.send_message(message.chat.id, '–í—ã –≤ 11.07.1985')
        bot.send_message(message.chat.id, '–û–∂–∏–¥–∞–π—Ç–µ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è...')        
        
#          ------ area -------
def get_area(message, name_user):
    global user_game
    password = message.text
    user_game[name_user]['password'] = password
    bot.delete_message(message.chat.id, message.message_id)
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    area1 = types.KeyboardButton('–¶–ê–û üíõ')
    area2 = types.KeyboardButton('–°–ó–ê–û üß°')
    area3 = types.KeyboardButton('–°–ê–û üíô')
    area4 = types.KeyboardButton('–ó–µ–ª–ê–û üíö')
    area5 = types.KeyboardButton('–°–í–ê–û üíú')
    area6 = types.KeyboardButton('–£–ì–°–û ‚ù§')
    markup.add(area1, area2, area3, area4, area5, area6)
    msg = bot.send_message(message.chat.id, '–í—ã–±–µ—Ä–∏—Ç–µ –æ–∫—Ä—É–≥ üåç', reply_markup=markup)
    bot.register_next_step_handler(msg, get_name, name_user)

#          ------ verify -------   
def get_name(message, name_user):
    global user_game
    user_game[name_user]['area'] = message.text
    area = user_game[name_user]['area']
    mess = f'–¢—ã –∏–∑ {area}. –¢–µ–±—è –∑–æ–≤—É—Ç {name_user}. –í—Å–µ –≤–µ—Ä–Ω–æ?'
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    yes = types.KeyboardButton('–î–∞')
    no = types.KeyboardButton('–ù–µ—Ç')
    markup.add(yes, no)
    msg = bot.send_message(message.from_user.id, mess, reply_markup=markup)
    bot.register_next_step_handler(msg, get_yn, name_user)

#          ------ persons -------
def get_yn(message, name_user):
    global user_game
    if message.text == '–ù–µ—Ç':
        del user_game[name_user]
        bot.register_next_step_handler(msg, ButSignUp)
    elif message.text == '–î–∞':
        markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
        area1 = types.KeyboardButton('–ù–∏–Ω–¥–∑—è ü•∑')
        area2 = types.KeyboardButton('–§–µ—è üßö')
        area3 = types.KeyboardButton('–°—ã—â–∏–∫ üïµ')
        area4 = types.KeyboardButton('–≠–ª—å—Ñ üßù')
        area5 = types.KeyboardButton('–†—É—Å–∞–ª–∫–∞ üßú')
        area6 = types.KeyboardButton('–í–∞–º–ø–∏—Ä üßõ')
        markup.add(area1, area2, area3, area4, area5, area6)
        msg = bot.send_message(message.chat.id, '–í—ã–±–µ—Ä–∏ –ø–µ—Ä—Å–æ–Ω–∞–∂–∞ üßç(–∏–º–µ–Ω–Ω–æ –æ–Ω –±—É–¥–µ—Ç –æ—Ç–æ–±—Ä–∞–∂–∞—Ç—å—Å—è —É —Ç–µ–±—è –≤ –¥–∞–ª—å–Ω–µ–π—à–µ–º)', reply_markup=markup)
        bot.register_next_step_handler(msg, finish_reg, name_user)

#          ------ result  -------
def finish_reg(message, name_user):
    global user_game
    user_game[name_user]['pers'] = message.text
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    h = types.KeyboardButton('–î–∞')
    s = types.KeyboardButton('–ù–µ—Ç')    
    markup.add(h, s)
    bot.send_message(message.chat.id, '–ü–æ–∑–¥—Ä–∞–≤–ª—è—é! –¢–µ—Ä–µ–ø—å –º—ã –∑–Ω–∞–∫–æ–º—ã!üòé')
    user_game[name_user]['money'] = 0
    user_game[name_user]['stat'] = '–ù–æ–≤–∏—á–æ–∫'
    area = user_game[name_user]['area']
    pers = user_game[name_user]['pers']
    money = user_game[name_user]['money']
    stat = user_game[name_user]['stat']
    pas = user_game[name_user]['password']
    idi = message.from_user.id
    bot.send_message(message.chat.id, f'{name_user}\nüßç:   {pers}\nüåç:   {area}')
    msg = bot.send_message(message.chat.id, '–•–æ—á–µ—à—å –µ—â–µ –∫–æ–≥–æ-—Ç–æ –∑–∞—Ä–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞—Ç—å?', reply_markup=markup)
    bot.register_next_step_handler(msg, YesNoRegister)
    shUser.append_row([name_user, pas, area, pers, money, stat, idi])



def YesNoRegister(message):
    if message.text == '–î–∞':
        markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
        h = types.KeyboardButton('/–≤—ã—Ö–æ–¥')   
        markup.add(h)
        msg = bot.send_message(message.chat.id, '–í–≤–µ–¥–∏ –§–∞–º–∏–ª–∏—é –∏ –ò–º—è –¥—Ä—É–≥–∞', reply_markup=markup)
        bot.register_next_step_handler(msg, get_password)
    else:
        bot.send_message(message.chat.id, '‚ö† ‚ö† ‚ö†')
        bot.send_message(message.chat.id, '–ü—Ä–æ–∏–∑–æ—à–ª–∞ –ø–µ—Ä–µ–≥—Ä—É–∑–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞... –ú–∞—à–∏–Ω–∞ –≤—Ä–µ–º–µ–Ω–∏ –∑–∞–ø—É—â–µ–Ω–∞...', reply_markup=types.ReplyKeyboardRemove())
        m = 'CAACAgIAAxkBAAEFLEdiv3QmtnJb7Gozpz1t8k9nPGj-gwACWwIAArrAlQVHEDI9MpTlvSkE'
        bot.send_sticker(message.chat.id, m)
        time.sleep(1)
        bot.send_message(message.chat.id, '–û—Ç–ø—Ä–∞–≤–∫–∞ –≤ 11.07.1985 —á–µ—Ä–µ–∑')
        bot.send_message(message.chat.id, '3')
        time.sleep(1)
        bot.send_message(message.chat.id, '2')
        time.sleep(1)
        bot.send_message(message.chat.id, '1')
        time.sleep(1)
        bot.send_message(message.chat.id, '0')
        bot.send_message(message.chat.id, '–í—ã –≤ 11.07.1985')
        bot.send_message(message.chat.id, '–û–∂–∏–¥–∞–π—Ç–µ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è...')


        



# ----------------- statistic ------------------------

@bot.message_handler(commands=['—Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞'])
def ButLogin(message):
    msg = bot.send_message(message.chat.id, '–í–≤–µ–¥–∏ –§–∞–º–∏–ª–∏—é –∏ –ò–º—è –∏ —è –ø–æ–∫–∞–∂—É —Ç–≤–æ—é —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É ü§ë', reply_markup=types.ReplyKeyboardRemove())
    bot.register_next_step_handler(msg, PassWord)

def PassWord(message):
    name = message.text
    if shUser.find(name):
        cell_row = shUser.find(name).row
        msg = bot.send_message(message.chat.id, '–í–≤–µ–¥–∏ –ø–∞—Ä–æ–ª—å üîí')
        bot.register_next_step_handler(msg, MyStat, cell_row)
    else:
        bot.send_message(message.chat.id, '–¢–∞–∫–æ–π –ø–µ—Ä—Å–æ–Ω–∞–∂ –Ω–µ –Ω–∞–π–¥–µ–Ω üò¢\n–ü—Ä–æ–≤–µ—Ä—å –∏–º—è –∏–ª–∏ –ó–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–π—Å—è!')
    

def MyStat(message, cell_row):
    if message.text == shUser.cell(cell_row, 2).value:
        bot.delete_message(message.chat.id, message.message_id)
        markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
        h = types.KeyboardButton('/–ø–æ–º–æ—â—å')
        s = types.KeyboardButton('/—Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è')
        g = types.KeyboardButton('/–∑–∞–≥–∞–¥–∫–∞')
        a = types.KeyboardButton('/–≤—ã—Ö–æ–¥')
        l = types.KeyboardButton('/—Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞')
        markup.add(h, s, g, l, a)
        name_user = shUser.cell(cell_row, 1).value
        area = shUser.cell(cell_row, 3).value
        pers = shUser.cell(cell_row, 4).value
        money = shUser.cell(cell_row, 5).value
        stat = shUser.cell(cell_row, 6).value
        bot.send_message(message.chat.id, f'{name_user}\nüßç:   {pers}\nüåç:   {area}\nüí∞:   {money} pixel\nüèÜ:   {stat}', reply_markup=markup)
    elif message.text != '/–≤—ã—Ö–æ–¥':
        msg = bot.send_message(message.chat.id, '–ù–µ –≤–µ—Ä–Ω—ã–π –ø–∞—Ä–æ–ª—å ü§ê\n–ü–æ–ø—Ä–æ–±—É–π –µ—â–µ —Ä–∞–∑ –∏–ª–∏ –Ω–∞–∂–º–∏ /–≤—ã—Ö–æ–¥')
        bot.register_next_step_handler(msg, MyStat, cell_row)
    else:
        markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
        h = types.KeyboardButton('/–ø–æ–º–æ—â—å')
        s = types.KeyboardButton('/—Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è')
        g = types.KeyboardButton('/–∑–∞–≥–∞–¥–∫–∞')
        l = types.KeyboardButton('/—Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞')
        markup.add(h, s, g, l)
        bot.send_message(message.chat.id, '–ß–µ–º —è –º–æ–≥—É –ø–æ–º–æ—á—å? üôÇ', reply_markup=markup)
        





# ------------------ riddles --------------------
@bot.message_handler(commands=['–∑–∞–≥–∞–¥–∫–∞'])
def SendName(message):
    msg = bot.send_message(message.chat.id, '–í–≤–µ–¥–∏ –§–∞–º–∏–ª–∏—é –∏ –ò–º—è –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –∑–∞–¥–∞–Ω–∏—è', reply_markup=types.ReplyKeyboardRemove())
    bot.register_next_step_handler(msg, PassWord)

def Pass_Word(message):
    name = message.text
    if shUser.find(name):
        cell_row = shUser.find(name).row
        msg = bot.send_message(message.chat.id, '–í–≤–µ–¥–∏ –ø–∞—Ä–æ–ª—å üîí')
        bot.register_next_step_handler(msg, Riddles, cell_row)
    elif name != '/–≤—ã—Ö–æ–¥':
        msg = bot.send_message(message.chat.id, '–¢–∞–∫–æ–π –ø–µ—Ä—Å–æ–Ω–∞–∂ –Ω–µ –Ω–∞–π–¥–µ–Ω üò¢\n–ü—Ä–æ–≤–µ—Ä—å –∏–º—è –∏–ª–∏ –ó–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–π—Å—è!')
        bot.register_next_step_handler(msg, Pass_Word)
    else:
        markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
        h = types.KeyboardButton('/–ø–æ–º–æ—â—å')
        s = types.KeyboardButton('/—Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è')
        g = types.KeyboardButton('/–∑–∞–≥–∞–¥–∫–∞')
        l = types.KeyboardButton('/—Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞')
        markup.add(h, s, g, l)
        bot.send_message(message.chat.id, '–ß–µ–º —è –º–æ–≥—É –ø–æ–º–æ—á—å? üôÇ', reply_markup=markup)
    

def Riddles(message, cell_row):
    if message.text == shUser.cell(cell_row, 2).value:
        bot.delete_message(message.chat.id, message.message_id)
        time_day_start_morn = datetime.time(5, 0, 0)
        time_day_finish_morn = datetime.time(5, 30, 0)
        time_day_start_ev = datetime.time(16, 0, 0)
        time_day_finish_ev = datetime.time(16, 30, 0)
        time_center = datetime.time(12, 0, 0)
        date_now = datetime.datetime.now()
        time_now = date_now.time()
        date_today = datetime.date.today()
        number_day = date_today.day

# ------------- check time -----------------        
        if time_now < time_center:
            if time_day_finish_morn >= time_now >= time_day_start_morn:
                if number_day == 22:
                    bot.send_photo(message.chat.id, 'https://storage.yandexcloud.net/tg-bot-merlin/Day12.jpg')
                if number_day > 22:
                    bot.send_photo(message.chat.id, 'https://storage.yandexcloud.net/tg-bot-merlin/Day12.jpg')
            elif time_day_finish_morn <= time_now:
                bot.send_message(message.chat.id, '–ü–æ–∑–¥–Ω–æ–≤–∞—Ç–æ —Ç—ã —Ä–µ—à–∏–ª –ø–æ—Ä–∞–±–æ—Ç–∞—Ç—å –º–æ–∑–≥–∞–º–∏. –û–∂–∏–¥–∞–π –≤–µ—á–µ—Ä–Ω—é—é –∑–∞–≥–∞–¥–∫—É...')
            else:
                bot.send_message(message.chat.id, '–†–∞–Ω–æ–≤–∞—Ç–æ —Ç—ã —Ä–µ—à–∏–ª –ø–æ—Ä–∞–±–æ—Ç–∞—Ç—å –º–æ–∑–≥–∞–º–∏. –ü—Ä–æ—è–≤–∏ —Ç–µ—Ä–ø–µ–Ω–∏–µ –¥–æ 8:00 ...')
        else:
            if time_day_finish_ev >= time_now >= time_day_start_ev:
                if number_day == 22:
                    bot.send_photo(message.chat.id, 'https://storage.yandexcloud.net/tg-bot-merlin/Day12.jpg')
                if number_day > 22:
                    bot.send_photo(message.chat.id, 'https://storage.yandexcloud.net/tg-bot-merlin/Day12.jpg')
            elif time_day_finish_ev <= time_now:
                bot.send_message(message.chat.id, '–ü–æ–∑–¥–Ω–æ–≤–∞—Ç–æ —Ç—ã —Ä–µ—à–∏–ª –ø–æ—Ä–∞–±–æ—Ç–∞—Ç—å –º–æ–∑–≥–∞–º–∏. –û–∂–∏–¥–∞–π —É—Ç—Ä–µ–Ω–Ω—é—é –∑–∞–≥–∞–¥–∫—É...')
            else:
                bot.send_message(message.chat.id, '–†–∞–Ω–æ–≤–∞—Ç–æ —Ç—ã —Ä–µ—à–∏–ª –ø–æ—Ä–∞–±–æ—Ç–∞—Ç—å –º–æ–∑–≥–∞–º–∏. –ü—Ä–æ—è–≤–∏ —Ç–µ—Ä–ø–µ–Ω–∏–µ –¥–æ 19:00 ...')
        
        
        #money = shUser.cell(cell_row, 5).value
        #bot.send_message(message.chat.id, f'–°—É–ø–µ—Ä! –¢–≤–æ–π –±–∞–ª–∞–Ω—Å:\nüí∞:   {money} pixel')

        markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
        h = types.KeyboardButton('/–ø–æ–º–æ—â—å')
        s = types.KeyboardButton('/—Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è')
        g = types.KeyboardButton('/–∑–∞–≥–∞–¥–∫–∞')
        l = types.KeyboardButton('/—Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞')
        markup.add(h, s, g, l)
        bot.send_message(message.chat.id, '–ß–µ–º —è –º–æ–≥—É –ø–æ–º–æ—á—å? üôÇ', reply_markup=markup)

    elif message.text != '/–≤—ã—Ö–æ–¥':
        msg = bot.send_message(message.chat.id, '–ù–µ –≤–µ—Ä–Ω—ã–π –ø–∞—Ä–æ–ª—å ü§ê\n–ü–æ–ø—Ä–æ–±—É–π –µ—â–µ —Ä–∞–∑ –∏–ª–∏ –Ω–∞–∂–º–∏ /–≤—ã—Ö–æ–¥')
        bot.register_next_step_handler(msg, Riddles, cell_row)
    else:
        markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
        h = types.KeyboardButton('/–ø–æ–º–æ—â—å')
        s = types.KeyboardButton('/—Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è')
        g = types.KeyboardButton('/–∑–∞–≥–∞–¥–∫–∞')
        l = types.KeyboardButton('/—Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞')
        markup.add(h, s, g, l)
        bot.send_message(message.chat.id, '–ß–µ–º —è –º–æ–≥—É –ø–æ–º–æ—á—å? üôÇ', reply_markup=markup)







# -------------------photo ----------------------
@bot.message_handler(content_types=['photo'])
def SendPhoto(message):
    foto = message.photo[-1].file_id
    markup = types.ReplyKeyboardMarkup()
    h = types.KeyboardButton('–°–æ—Ö—Ä–∞–Ω–∏—Ç—å –≤ –∞—Ä—Ö–∏–≤ –ù–æ–≤–æ–≥–æ –í–µ–∫—Ç–æ—Ä–∞')
    g = types.KeyboardButton('–ü—Ä–æ—Å—Ç–æ —Å–æ—Ö—Ä–∞–Ω—è—é –≤–æ—Å–ø–æ–º–∏–Ω–∞–Ω–∏—è')
    a = types.KeyboardButton('–û—Ç–ø—Ä–∞–≤–∏—Ç—å –¥—Ä—É–≥—É')
    markup.add(h).add(a).add(g)
    msg = bot.send_message(message.chat.id, '–ö—Ä—É—Ç–∞—è —Ñ–æ—Ç–∫–∞ üî•\n–ß—Ç–æ —Ö–æ—á–µ—à—å —Å –Ω–µ–π —Å–¥–µ–ª–∞—Ç—å?', reply_markup=markup)
    bot.register_next_step_handler(msg, MyPhoto, foto)

def MyPhoto(message, foto):
    if message.text == '–°–æ—Ö—Ä–∞–Ω–∏—Ç—å –≤ –∞—Ä—Ö–∏–≤ –ù–æ–≤–æ–≥–æ –í–µ–∫—Ç–æ—Ä–∞':
        chanel_id = '-1001551742821'
        bot.send_photo(chanel_id, foto)
        markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
        h = types.KeyboardButton('/–ø–æ–º–æ—â—å')
        s = types.KeyboardButton('/—Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è')
        g = types.KeyboardButton('/–∑–∞–≥–∞–¥–∫–∞')
        l = types.KeyboardButton('/—Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞')
        markup.add(h, s, g, l)
        bot.send_message(message.chat.id, '–û—Ç–ª–∏—á–Ω–æ! –§–æ—Ç–æ —É–ª–µ—Ç–µ–ª–æ –≤ –∞—Ä—Ö–∏–≤! –ü—Ä–æ–¥–æ–ª–∂–∞–π –≤ —Ç–æ–º –∂–µ –¥—É—Ö–µ üòú', reply_markup=markup)
    if message.text == '–ü—Ä–æ—Å—Ç–æ —Å–æ—Ö—Ä–∞–Ω—è—é –≤–æ—Å–ø–æ–º–∏–Ω–∞–Ω–∏—è':
        markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
        h = types.KeyboardButton('/–ø–æ–º–æ—â—å')
        s = types.KeyboardButton('/—Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è')
        g = types.KeyboardButton('/–∑–∞–≥–∞–¥–∫–∞')
        l = types.KeyboardButton('/—Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞')
        markup.add(h, s, g, l)
        #bot.send_photo(message.chat.id, foto)
        bot.send_message(message.chat.id, '–û—Ç–ª–∏—á–Ω–æ! –ü—Ä–æ–¥–æ–ª–∂–∞–π –≤ —Ç–æ–º –∂–µ –¥—É—Ö–µ üòú', reply_markup=markup)
    if message.text == '–û—Ç–ø—Ä–∞–≤–∏—Ç—å –¥—Ä—É–≥—É':
        msg = bot.send_message(message.chat.id, '–í–≤–µ–¥–∏ –§–∞–º–∏–ª–∏—é –∏ –ò–º—è –¥—Ä—É–≥–∞')
        bot.register_next_step_handler(msg, NameFriend, foto)
    
def NameFriend(message, foto):
    name = message.text
    if shUser.find(name):
        cell_row = shUser.find(name).row
        id_friend = int(shUser.cell(cell_row, 7).value)
        #bot.send_message(message.chat.id, id_friend)
        bot.send_message(message.chat.id, '–§–æ—Ç–∫–∞ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞!')
        user_name = message.from_user.username
        bot.send_message(id_friend, f'{user_name} –æ—Ç–ø—Ä–∞–≤–∏–ª —Ç–µ–±–µ —Ñ–æ—Ç–æ)')
        bot.send_photo(id_friend, foto)
        markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
        h = types.KeyboardButton('–î–∞')
        s = types.KeyboardButton('–ù–µ—Ç')
        markup.add(h, s)
        msg = bot.send_message(message.chat.id, '–•–æ—á–µ—à—å –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –µ—â–µ –∫–æ–º—É-—Ç–æ?', reply_markup=markup)
        bot.register_next_step_handler(msg, YesNo, foto)
    elif name != '/–≤—ã—Ö–æ–¥':
        msg = bot.send_message(message.chat.id, '–¢–∞–∫–æ–π –ø–µ—Ä—Å–æ–Ω–∞–∂ –Ω–µ –Ω–∞–π–¥–µ–Ω üò¢\n–ü—Ä–æ–≤–µ—Ä—å –∏–º—è –∏–ª–∏ –≤–≤–µ–¥–∏ /–≤—ã—Ö–æ–¥')
        bot.register_next_step_handler(msg, NameFriend, foto)
    else:
        markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
        h = types.KeyboardButton('/–ø–æ–º–æ—â—å')
        s = types.KeyboardButton('/—Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è')
        g = types.KeyboardButton('/–∑–∞–≥–∞–¥–∫–∞')
        l = types.KeyboardButton('/—Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞')
        markup.add(h, s, g, l)
        bot.send_message(message.chat.id, '–ß–µ–º —è –º–æ–≥—É –ø–æ–º–æ—á—å? üôÇ', reply_markup=markup)

def YesNo(message, foto):
    if message.text == '–î–∞':
        msg = bot.send_message(message.chat.id, '–í–≤–µ–¥–∏ –§–∞–º–∏–ª–∏—é –∏ –ò–º—è –¥—Ä—É–≥–∞')
        bot.register_next_step_handler(msg, NameFriend, foto)
    else:
        markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
        h = types.KeyboardButton('/–ø–æ–º–æ—â—å')
        s = types.KeyboardButton('/—Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è')
        g = types.KeyboardButton('/–∑–∞–≥–∞–¥–∫–∞')
        l = types.KeyboardButton('/—Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞')
        markup.add(h, s, g, l)
        bot.send_message(message.chat.id, '–ß–µ–º —è –º–æ–≥—É –ø–æ–º–æ—á—å? üôÇ', reply_markup=markup)



# ------------------- exit ----------------------
@bot.message_handler(commands=['–≤—ã—Ö–æ–¥'])
def Exit(message):
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    h = types.KeyboardButton('/–ø–æ–º–æ—â—å')
    s = types.KeyboardButton('/—Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è')
    g = types.KeyboardButton('/–∑–∞–≥–∞–¥–∫–∞')
    l = types.KeyboardButton('/—Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞')
    markup.add(h, s, g, l)
    bot.send_message(message.chat.id, '–ß–µ–º —è –º–æ–≥—É –ø–æ–º–æ—á—å? üôÇ', reply_markup=markup)





# ------------------- DIALOG --------------------
@bot.message_handler(content_types=['text'])
def Mess(message):
    bot.send_message(message.chat.id, '–°–≤—è–∑—å –ø–æ—Ç–µ—Ä—è–Ω–∞... –ü–æ–ø—Ä–æ–±—É–π –∑–∞–π—Ç–∏ –≤ —Ä–∞–∑–¥–µ–ª –µ—â–µ —Ä–∞–∑')



# ---------------- local testing ----------------
if __name__ == '__main__':    
    bot.infinity_polling()