import os
import random
import json
import logging
import telebot

from settings import BOT_TOKEN

from telebot import types

bot = telebot.TeleBot(os.environ.get(BOT_TOKEN))

user_game = {}


# --------------------- bot ---------------------

# --------------- start/help --------------------
@bot.message_handler(commands=['start'])
def start(message):
    m = 'CAACAgEAAxkBAAEE7rxin5-boWU22IzZGSczBm4OfkLqkAAC5gADWiSJRtvzAtn5dWoEJAQ'
    mess = f'–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ ‚ú®–ù–æ–≤—ã–π –í–µ–∫—Ç–æ—Ä‚ú®\n\n–ú–µ–Ω—è –∑–æ–≤—É—Ç –ú–∞—Å—Ç–µ—Ä –°–ø–ª–∏–Ω—Ç–µ—Ä –∏ —è –±—É–¥—É –Ω–∞–ø—Ä–∞–≤–ª—è—Ç—å —Ç–µ–±—è –Ω–∞ —ç—Ç–æ–º –ø—É—Ç–∏! üòå'
    bot.send_sticker(message.chat.id, m)
    bot.send_message(message.chat.id, mess)
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    h = types.KeyboardButton('/startgamer')
    s = types.KeyboardButton('/startadmin')
    markup.add(h, s)
    bot.send_message(message.chat.id, '–í—ã–±–µ—Ä–∏ —Å–≤–æ—é —Ä–æ–ª—å: –∏–≥—Ä–æ–∫ –∏–ª–∏ –∞–¥–º–∏–Ω–∏c—Ç—Ä–∞—Ç–æ—Ä!', reply_markup=markup)


# ---------------- ADMIN -----------------------
@bot.message_handler(commands=['startadmin'])
def start(message):
    m = '–ü—Ä–∏–≤–µ—Ç—Å—Ç–≤—É—é —Ç–µ–±—è –≥–µ–π–º–∏—Ñ–∏–∫–∞—Ç–æ—Ä!'
    s = 'CAACAgIAAxkBAAEE4SZilS7MDpKmnr8lv_b5BvYSlPn8uwACrBMAAjieIUvRyGVa6d742yQE'
    mess = '–í–≤–µ–¥–∏ —Å–µ–∫—Ä–µ—Ç–Ω—ã–π –ø–∞—Ä–æ–ª—å'
    bot.send_message(message.chat.id, m)
    bot.send_sticker(message.chat.id, s)
    msg = bot.send_message(message.chat.id, mess, reply_markup=types.ReplyKeyboardRemove())
    bot.register_next_step_handler(msg, get_verify)


def get_verify(message):
    if message.text == 'password':
        bot.send_message(message.chat.id, '–ü—Ä–∏–≤–µ—Ç')
    elif message.text != '/mainmenu':
        msg = bot.send_message(message.chat.id,
                               '–ù–µ –≤–µ—Ä–Ω—ã–π –ø–∞—Ä–æ–ª—å!\n–ü–æ–ø—Ä–æ–±—É–π –µ—â–µ —Ä–∞–∑ –∏–ª–∏ —Ç—ã –æ–±–º–∞–Ω—â–∏–∫-–∏–≥—Ä–æ–∫ –∏ —Ç–µ–±–µ –ø–æ—Ä–∞ –≤ /mainmenu? üòë')
        bot.register_next_step_handler(msg, get_verify)
    else:
        markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
        h = types.KeyboardButton('/startgamer')
        s = types.KeyboardButton('/startadmin')
        markup.add(h, s)
        bot.send_message(message.chat.id, '–í—ã–±–µ—Ä–∏ —Å–≤–æ—é —Ä–æ–ª—å: –∏–≥—Ä–æ–∫ –∏–ª–∏ –∞–¥–º–∏–Ω–∏c—Ç—Ä–∞—Ç–æ—Ä!', reply_markup=markup)


# ---------------- GAMER -----------------------
@bot.message_handler(commands=['startgamer'])
def start_gamer(message):
    m = '–ü—Ä–∏–≤–µ—Ç—Å—Ç–≤—É—é —Ç–µ–±—è –∏–≥—Ä–æ–∫!'
    s = f'CAACAgEAAxkBAAEE7t9in7Tm86pe0BEJyeqX08umkx34wwACxgADFC-IRr9WJ3-by2R_JAQ'
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    h = types.KeyboardButton('/helpgamer')
    s = types.KeyboardButton('/signup')
    g = types.KeyboardButton('/game')
    a = types.KeyboardButton('/mainmenu')
    l = types.KeyboardButton('/statistic')
    markup.add(h, s, g, l, a)
    bot.send_message(message.chat.id, m)
    # bot.send_sticker(message.chat.id, s)
    bot.send_message(message.chat.id, '–ß–µ–º —è –º–æ–≥—É –ø–æ–º–æ—á—å? üôÇ\n/helpgamer', reply_markup=markup)


@bot.message_handler(commands=['helpgamer'])
def help_gamer(message):
    global user_game
    mess = 'üßê –ß—Ç–æ —è –º–æ–≥—É: üîé'
    m1 = f'/signup - –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –Ω–æ–≤–æ–≥–æ –ø–µ—Ä—Å–æ–Ω–∞–∂–∞'
    m2 = f'/statistic - –ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –ø–æ —Å–≤–æ–µ–º—É –ø–µ—Ä—Å–æ–Ω–∞–∂—É'
    m3 = f'/game - –ï–∂–µ–¥–Ω–µ–≤–Ω–∞—è –∑–∞–≥–∞–¥–∫–∞'
    m4 = f'/exit - –í—ã—Ö–æ–¥ –≤ –º–µ–Ω—é –∏–≥—Ä–æ–∫–∞'
    m5 = f'/mainmenu - –í—ã—Ö–æ–¥ –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é'
    bot.send_message(message.chat.id, mess + '\n' + m1 + '\n' + m2 + '\n' + m3 + '\n' + m4 + '\n' + m5)
    bot.send_message(message.chat.id, user_game)


# ---------------- signup ----------------------

@bot.message_handler(commands=['signup'])
#          ------ name -------
def ButSignUp(message):
    bot.send_message(message.chat.id, 'üëæ –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ —Ä–∞–∑–¥–µ–ª —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏!')
    bot.send_message(message.chat.id, '–°–æ–∑–¥–∞–π —Å–≤–æ–µ–≥–æ –ø–µ—Ä—Å–æ–Ω–∞–∂–∞ üßç–∏ –æ—Ç–ø—Ä–∞–≤–ª—è–π—Å—è –≤ —É–≤–ª–µ–∫–∞—Ç–µ–ª—å–Ω–æ–µ –ø—Ä–∏–∫–ª—é—á–µ–Ω–∏–µ ü§©')
    bot.send_message(message.chat.id, '–í–≤–µ–¥–∏ –§–∞–º–∏–ª–∏—é –∏ –ò–º—è')
    msg = bot.send_message(message.chat.id, '–í–≤–æ–¥–∏ –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ, –∏–Ω–∞—á–µ —è –Ω–µ —Å–º–æ–≥—É –Ω–∞—á–∏—Å–ª—è—Ç—å —Ç–µ–±–µ –±–∞–ª–ª—ã',
                           reply_markup=types.ReplyKeyboardRemove())
    bot.register_next_step_handler(msg, get_password)


#          ------ password -------
def get_password(message):
    global user_game
    name = message.text
    if name not in user_game:
        user_game[name] = {}
        msg = bot.send_message(message.chat.id,
                               '–ü—Ä–∏–¥—É–º–∞–π –ø–∞—Ä–æ–ª—å üîí\n–ó–∞–ø–æ–º–Ω–∏ –µ–≥–æ, –ø–æ—Å–ª–µ –≤–≤–æ–¥–∞ –æ–Ω –∏—Å—á–µ–∑–Ω–µ—Ç. –£–∑–Ω–∞—Ç—å –µ–≥–æ —Ç—ã —Å–º–æ–∂–µ—à—å —Ç–æ–ª—å–∫–æ —É –≥–µ–π–º–∏—Ñ–∏–∫–∞—Ç–æ—Ä–∞.')
        bot.register_next_step_handler(msg, get_area, name)
    else:
        bot.send_message(message.chat.id,
                         '–¢–∞–∫–æ–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —É–∂–µ —Å–æ–∑–¥–∞–Ω ü§∑. –ù–∞—á–Ω–∏ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—é –∑–∞–Ω–æ–≤–æ /signup –∏–ª–∏ –Ω–∞–∂–º–∏ /statistic, —á—Ç–æ–±—ã –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É.')


#          ------ area -------
def get_area(message, name_user):
    global user_game
    password = message.text
    user_game[name_user]['password'] = password
    bot.delete_message(message.chat.id, message.message_id)
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    area1 = types.KeyboardButton('–¶–ê–û ‚ù§')
    area2 = types.KeyboardButton('–°–ó–ê–û üñ§')
    area3 = types.KeyboardButton('–°–ê–û üíö')
    area4 = types.KeyboardButton('–ó–µ–ª–ê–û üíô')
    area5 = types.KeyboardButton('–°–í–ê–û üíú')
    area6 = types.KeyboardButton('–í–ê–û üíõ')
    markup.add(area1, area2, area3, area4, area5, area6)
    msg = bot.send_message(message.chat.id, '–í—ã–±–µ—Ä–∏—Ç–µ –æ–∫—Ä—É–≥ üåç', reply_markup=markup)
    bot.register_next_step_handler(msg, get_name, name_user)


#          ------ verify -------
def get_name(message, name_user):
    global user_game
    user_game[name_user]['area'] = message.text
    area = user_game[name_user]['area']
    mess = f'–¢—ã –∏–∑ {area}. –¢–µ–±—è –∑–æ–≤—É—Ç {name_user}. –í—Å–µ –≤–µ—Ä–Ω–æ?'
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    yes = types.KeyboardButton('–î–∞')
    no = types.KeyboardButton('–ù–µ—Ç')
    markup.add(yes, no)
    msg = bot.send_message(message.from_user.id, mess, reply_markup=markup)
    bot.register_next_step_handler(msg, get_yn, name_user)


#          ------ persons -------
def get_yn(message, name_user):
    global user_game
    if message.text == '–ù–µ—Ç':
        del user_game[name_user]
        bot.register_next_step_handler(msg, Exit)
    elif message.text == '–î–∞':
        markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
        area1 = types.KeyboardButton('–ù–∏–Ω–¥–∑—è ü•∑')
        area2 = types.KeyboardButton('–§–µ—è üßö')
        area3 = types.KeyboardButton('–°—ã—â–∏–∫ üïµ')
        area4 = types.KeyboardButton('–≠–ª—å—Ñ üßù')
        area5 = types.KeyboardButton('–†—É—Å–∞–ª–∫–∞ üßú')
        area6 = types.KeyboardButton('–í–∞–º–ø–∏—Ä üßõ')
        markup.add(area1, area2, area3, area4, area5, area6)
        msg = bot.send_message(message.chat.id, '–í—ã–±–µ—Ä–∏ –ø–µ—Ä—Å–æ–Ω–∞–∂–∞ üßç(–∏–º–µ–Ω–Ω–æ –æ–Ω –±—É–¥–µ—Ç –æ—Ç–æ–±—Ä–∞–∂–∞—Ç—å—Å—è —É —Ç–µ–±—è –≤ –¥–∞–ª—å–Ω–µ–π—à–µ–º)',
                               reply_markup=markup)
        bot.register_next_step_handler(msg, finish_reg, name_user)


#          ------ result  -------
def finish_reg(message, name_user):
    global user_game
    user_game[name_user]['pers'] = message.text
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    h = types.KeyboardButton('/helpgamer')
    s = types.KeyboardButton('/signup')
    g = types.KeyboardButton('/game')
    a = types.KeyboardButton('/exit')
    l = types.KeyboardButton('/statistic')
    markup.add(h, s, g, l, a)
    bot.send_message(message.chat.id, '–ü–æ–∑–¥—Ä–∞–≤–ª—è—é! –¢—ã –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω!üòé', reply_markup=markup)
    user_game[name_user]['money'] = 0
    user_game[name_user]['level'] = 0
    user_game[name_user]['stat'] = '–ù–æ–≤–∏—á–æ–∫'
    area = user_game[name_user]['area']
    pers = user_game[name_user]['pers']
    money = user_game[name_user]['money']
    level = user_game[name_user]['level']
    stat = user_game[name_user]['stat']
    pas = user_game[name_user]['password']
    bot.send_message(message.chat.id,
                     f'{name_user}\n{pas}\nüåç:   {area}\nüßç:   {pers}\nüí∞:   {money}\nüìä:   {level}\nüèÜ:   {stat}')


# ----------------- statistic ------------------------

@bot.message_handler(commands=['statistic'])
def ButLogin(message):
    msg = bot.send_message(message.chat.id, '–í–≤–µ–¥–∏ –§–∞–º–∏–ª–∏—é –∏ –ò–º—è –∏ —è –ø–æ–∫–∞–∂—É —Ç–≤–æ—é —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É ü§ë',
                           reply_markup=types.ReplyKeyboardRemove())
    bot.register_next_step_handler(msg, PassWord)


def PassWord(message):
    global user_game
    name = message.text
    if name in user_game:
        msg = bot.send_message(message.chat.id, '–í–≤–µ–¥–∏ –ø–∞—Ä–æ–ª—å üîí')
        bot.register_next_step_handler(msg, MyStat, name)
    else:
        bot.send_message(message.chat.id, '–¢–∞–∫–æ–π –ø–µ—Ä—Å–æ–Ω–∞–∂ –Ω–µ –Ω–∞–π–¥–µ–Ω üò¢\n–ó–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–π—Å—è /signup')


def MyStat(message, name_user):
    global user_game
    if message.text == user_game[name_user]['password']:
        markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
        h = types.KeyboardButton('/helpgamer')
        s = types.KeyboardButton('/signup')
        g = types.KeyboardButton('/game')
        a = types.KeyboardButton('/exit')
        l = types.KeyboardButton('/statistic')
        markup.add(h, s, g, l, a)
        area = user_game[name_user]['area']
        pers = user_game[name_user]['pers']
        money = user_game[name_user]['money']
        level = user_game[name_user]['level']
        stat = user_game[name_user]['stat']
        bot.send_message(message.chat.id,
                         f'{name_user}\nüåç:   {area}\nüßç:   {pers}\nüí∞:   {money}\nüìä:   {level}\nüèÜ:   {stat}',
                         reply_markup=markup)
    elif message.text != '/exit':
        msg = bot.send_message(message.chat.id, '–ù–µ –≤–µ—Ä–Ω—ã–π –ø–∞—Ä–æ–ª—å ü§ê\n–ü–æ–ø—Ä–æ–±—É–π –µ—â–µ —Ä–∞–∑ –∏–ª–∏ –Ω–∞–∂–º–∏ /exit')
        bot.register_next_step_handler(msg, MyStat, name_user)
    else:
        markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
        h = types.KeyboardButton('/helpgamer')
        s = types.KeyboardButton('/signup')
        g = types.KeyboardButton('/game')
        a = types.KeyboardButton('/mainmenu')
        l = types.KeyboardButton('/statistic')
        markup.add(h, s, g, l, a)
        bot.send_message(message.chat.id, '–ß–µ–º —è –º–æ–≥—É –ø–æ–º–æ—á—å? üôÇ\n/helpgamer', reply_markup=markup)


# ------------------- exit ----------------------
@bot.message_handler(commands=['exit'])
def Exit(message):
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    h = types.KeyboardButton('/helpgamer')
    s = types.KeyboardButton('/signup')
    g = types.KeyboardButton('/game')
    a = types.KeyboardButton('/mainmenu')
    l = types.KeyboardButton('/statistic')
    markup.add(h, s, g, l, a)
    bot.send_message(message.chat.id, '–ß–µ–º —è –º–æ–≥—É –ø–æ–º–æ—á—å? üôÇ\n/helpgamer', reply_markup=markup)


# ---------------- MAIN MENU --------------------
@bot.message_handler(commands=['mainmenu'])
def MainMenu(message):
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    h = types.KeyboardButton('/startgamer')
    s = types.KeyboardButton('/startadmin')
    markup.add(h, s)
    bot.send_message(message.chat.id, '–í—ã–±–µ—Ä–∏ —Å–≤–æ—é —Ä–æ–ª—å: –∏–≥—Ä–æ–∫ –∏–ª–∏ –∞–¥–º–∏–Ω–∏c—Ç—Ä–∞—Ç–æ—Ä!', reply_markup=markup)


# ------------------- DIALOG --------------------
@bot.message_handler(content_types=['text'])
def Mess(message):
    bot.send_message(message.chat.id, '–Ø —Ç–µ–±—è –Ω–µ –ø–æ–Ω–∏–º–∞—é. –ò—Å–ø–æ–ª—å–∑—É–π –∫–æ–º–∞–Ω–¥—É /exit')


# ---------------- local testing ----------------
if __name__ == '__main__':
    bot.infinity_polling()
